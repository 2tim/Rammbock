*** Settings ***
Test Setup        Create server and client, and define protocol
Test Teardown     Reset Rammbock
Default Tags      regression
Resource          Protocols.txt

*** Variables ***
${GTP CONTROL PORT}    2123
${LOCALHOST IP}    127.0.0.1
${CREATE SESSION REQUEST}    32

*** Test Cases ***
Create Session Request
    [Tags]
    Create and send Create Session Request
    get message    sequence number:48
    Receive and Validate Create Session Request

*** Keywords ***
Create and send Create Session Request
    send Create Session Request

Receive and Validate Create Session Request
    Server Receives Data
    Validate Create Session Request

Create server and client, and define protocol
    define gtpv2 protocol
    start udp server    ${LOCALHOST IP}    ${GTP CONTROL PORT}    protocol=gtpv2
    start udp client    ip=${LOCALHOST IP}    protocol=gtpv2

define gtpv2 protocol
    new protocol    gtpv2
    u8    flags    72
    u8    message type
    u16    message length
    pdu    message length-4
    end protocol

send Create Session Request
    new message    create session request    gtpv2    message type:${CREATE SESSION REQUEST}
    u32    tunnel endpoint identifier    0
    u24    sequence number
    u8    spare    0
    IMSI    262120000000001
    MSISDN    358    6100000000001
    #ULI    value.flags:0b00011000    value.tai.tracking_area_code:1    value.tai.tracking_area_identity:1

IMSI
    [Arguments]    ${value}
    IE    imsi    83    u64    ${value}

MSISDN
    [Arguments]    ${country code}=358    ${address digits}=6100000000001
    IE    msisdn    54    tbcd    ${country code}    ${address digits}

ADDRESS
    [Arguments]    ${value}
    IE    address    54    Chars    ie length    ${value}

WOPPA
    [Arguments]    ${value}
    IE    wobba_flags    54    u8    ${value}

ULI
    [Arguments]    @{values}
    IE    uli    88    uli fields    @{values}

Uli fields
    [Arguments]    ${foobar}    @{args}
    struct    contain    contain
    u8    flags
    TAI    tai
    ECGI    ecgi
    end struct

IE
    [Arguments]    ${name}    ${type}    ${content}    @{values}
    Struct    IE    ${name}
    u8    ie type    ${type}
    u16    ie_length
    u8    instance    0
    container    value    ie_length    ${content}    content    @{values}
    End struct
    # uli fields
    # [arguments]    ${foobar}    @{args}
    # u8    flags

TAI
    struct    tai    tai    @{args}
    u8    mobile_country_code
    u8    mobile_network_code
    u8    tracking_area_identity
    end struct
