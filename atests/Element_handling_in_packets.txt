*** Settings ***
Test Setup      UDP Server and Client are initialized
Test Teardown   Close Connections
Default Tags    regression
Library         rammbock.Rammbock
Resource        resources/Messaging.txt

*** Test Cases ***
Encode message with decimal data as octets
    Create Message and Add Decimal as octets
    Client sends Data
    Server receives data and checks it exists

Encode message with multiple decimal data elements as octets
    Create Message and add two decimals as octets
    Client Sends Data
    Server receives data and checks it exists

Encode message with bitstream data as binary
    Create Message And Add Bitstream data
    Client sends data
    Server receives data and checks it exists

Encode Message with multiple data fields containing bits
    [Tags]  ${EMPTY}

Try Encode too long decimal data as octets
    Create Message
    Run Keyword And Expect Error  Value is too big for length  Add Decimal As Octets  300  1

Try to encode too long decimal as bits
    Create Message
    Run Keyword And Expect Error  Value is too big for length  Add Decimal As Bits  256  1

Decode octets from message to single decimal
    Create Message and Add Decimal as octets
    Client sends Data
    Server receives and validates message

Decode octets from message to decimals
    Create Message and add two decimals as octets
    Client sends Data
    Server Receives And Validates message with multipart binary data

Decode bits from message to single decimal
    [Tags]  ${EMPTY}

Decode bits from message to decimals
    [Tags]  ${EMPTY}

Send And Receive message with string
    Create And Send Message with String
    Receive Message with String and validate field

Send And Receive message with multiple strings
    Create and Send Message With Multiple String Fields
    Receive Message With Multiple String fields and validate them

Send And Receive message containing octets, bits and strings
    [Tags]  ${EMPTY}

*** Keywords ***
Create Message and add two decimals as octets
    Create Message
    Add Decimal as Octets  72  1
    Add Decimal as Octets  216  2

Create Message And Add Bitstream data
    Create Message
    Add decimal as bits  255  8
    Client Sends Data

Create Message and Add Decimal as octets
    Create Message
    Add Decimal as Octets  72  1

Server receives data and checks it exists
    ${message}=  Server Receives Data
    Should Not Be Empty  ${message}

Server receives data and validates header
    Receive data and validate against string  \ 7

Server receives and validates data
    ${message}=  Server Receives Data
    Should Be Equal As Strings  ${message}  H

Server receives and validates message
    Create Message
    Server Receives Data
    ${flags}=  Read From Data  1
    Should Be Equal  ${flags}  72

Server Receives And Validates message with multipart binary data
    Create Message
    Server Receives Data
    ${flags}=  Read From Data  1
    ${message_length}=  Read From Data  2
    Should Be Equal  ${flags}  72
    Should Be Equal  ${message_length}  216

Receive Message With Multiple String fields and validate them
    Server Receives Data
    ${field1}=  Read Until  ${SPACE}
    ${field2}=  Read Until  \r\n
    Should Be Equal  ${field1}  field1
    Should Be Equal  ${field2}  field2

Receive Message with String and validate field
    Server Receives Data
    ${test field}=  Read Until
    Should Be Equal  ${test field}  Test

Receive data and validate against string
    [Arguments]  ${content}
    ${data}=  Server Receives Data
    Should Be Equal  ${data}  ${content}

Create And Send Message with String
    Create Message
    Add String  Test
    Client Sends Data

Create and Send Message With Multiple String Fields
    Create Message
    Add String  field1
    Add String  ${SPACE}
    Add String  field2
    Add String  \r\n
    Client Sends Data

