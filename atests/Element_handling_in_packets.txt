*** Settings ***
Test Setup      UDP Server and Client are initialized
Test Teardown   Close Connections
Default Tags    regression
Library         rammbock.Rammbock
Resource        resources/Messaging.txt

*** Test Cases ***
Encode message with multiple binary data elements
    [Tags]  ${EMPTY}
    Create Message and add headers
    Client sends message
    Server receives and validates multipart data

Encode message with binary data
    [Tags]  regression
    Create Message and Add Flags
    Client sends message
    Server receives and validates data

Decode message with binary data
    Create Message and Add Flags
    Client sends message
    Server receives and validates message

Decode message with multiple binary data elements
    [Tags]  ${EMPTY}
    Create Message and add headers
    Client sends message
    Server Receives And Validates message with multipart binary data

Encode Message with String Data
    Send Message with String
    Receive Message with String

Send And Receive Message with one string field
    Send Message with String
    Receive Message with String and validate field

Send and Receive message with multiple string fields
    Send Message With Multiple String Fields
    Receive Message With Multiple String fields and validate them

*** Keywords ***
Create Message and add headers
    Create Message
    Add Decimal as Binary  Flags  72  1
    Add Decimal as Binary  Message Length  216  2

Server receives data and validates header
    Receive data and validate against string  \ 7

Receive data and validate against string
    [Arguments]  ${content}
    ${data}=  Server Receives Data
    Should Be Equal  ${data}  ${content}

Server receives and validates message
    Create Message
    Add Decimal as Binary Schema  Flags  1
    Server Receives Message
    ${flags}=  Get Binary data as Decimal  Flags
    Should Be Equal  ${flags}  72

Create Message and Add Flags
    Create Message
    Add Decimal as Binary  Flags  72  1  # 010. .... = Version: 2, ...1 .... = P: 0, .... 1... = T: 1

Server receives and validates data
    ${message}=  Server Receives Data
    Should Be Equal As Strings  ${message}  H

Server receives and validates multipart data
    ${message}=  Server Receives Data
    Should Not Be Empty  ${message}

Server Receives And Validates message with multipart binary data
    Create Message
    Add Decimal as Binary Schema  Flags  1
    Add Decimal as Binary Schema  Message Length  2
    Server Receives Message
    ${flags}=  Get Binary data as Decimal  Flags
    ${message_length}  Get Binary data as Decimal  Message Length
    Should Be Equal  ${flags}  72
    Should Be Equal  ${message_length}  216

Send Message with String
    Create Message
    Add String  Test
    Client Sends Message

Receive Message with String
    ${message}=  Server Receives Data
    Should Be Equal  ${message}  Test

Receive Message with String and validate field
    Server Receives Data
    ${test field}=  Read Until
    Should Be Equal  ${test field}  Test

Send Message With Multiple String Fields
    Create Message
    Add String  field1
    Add String  ${SPACE}
    Add String  field2
    Add String  \r\n
    Client Sends Message

Receive Message With Multiple String fields and validate them
    Server Receives Data
    ${field1}=  Read Until  ${SPACE}
    ${field2}=  Read Until  \r\n
    Should Be Equal  ${field1}  field1
    Should Be Equal  ${field2}  field2

