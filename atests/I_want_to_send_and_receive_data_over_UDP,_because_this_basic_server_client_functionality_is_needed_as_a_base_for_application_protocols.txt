*** Settings ***
Default Tags    regression
Library         ../src/Rammbock.py

*** Variables ***
${EXPECTED_STRING}  ismo_rulettaa
${HOST}  localhost
${PORT}  2010
${PHYSICAL_INTERFACE}  lo
${VIRTUAL_HOST}  1.1.1.1
${RECEIVED_STRING}  ${EMPTY}
${EXPECTED_MODIFIED_STRING}  ismo_rulettaa_koviten

*** Test Cases ***
Send and Receive string over UDP using physical interface
    [Setup]
    GIVEN UDP Server and Client are initialized to physical interface
    WHEN Client Sends String
    THEN Server Receives String
    [Teardown]  Close Connections

Send and Receive string over UDP using virtual interface
    [Setup]
    GIVEN UDP Client and Server are initialized to virtual interface
    WHEN Client Sends String
    THEN Server Receives String
    [Teardown]  Close Connections and remove virtual interface

Send data over UDP and modify it and return it back
    [Setup]
    GIVEN UDP Server and Client are initialized to physical interface
    WHEN Client Sends String
    THEN Server Receives String
    AND Server Modifies String
    AND Server Sends Modified String
    AND Client Receives String Over
    [Teardown]  Close Connections

*** Keywords ***
Server is started
    [Arguments]  ${interface}
    Start Server  ${interface}  ${PORT}

Server Receives String
    ${RECEIVED_STRING}=  server receive packet over udp
    Set Test Variable  \${RECEIVED_STRING}  ${RECEIVED_STRING}
    Should Be Equal  ${RECEIVED_STRING}  ${EXPECTED_STRING}

Connect to Server
    [Arguments]  ${host}
    Rammbock.connect to server  ${host}  ${PORT}

Client Sends String
    client send packet over udp  ${EXPECTED_STRING}

UDP Server and Client are initialized to physical interface
    use interface  PHYSICAL  ${PHYSICAL_INTERFACE}
    Server is Started  PHYSICAL
    Connect to Server  ${HOST}

Close Connections
    Close Client
    Close Server

UDP Client and Server are initialized to virtual interface
    create virtual interface  VIRTUAL_INTERFACE  ${PHYSICAL_INTERFACE}  1.1.1.1  255.255.255.255
    Server is Started  VIRTUAL_INTERFACE
    connect to server  ${VIRTUAL_HOST}

Close Connections and remove virtual interface
    Close Client
    Close Server
    Delete Interface  VIRTUAL_INTERFACE

Server Modifies String
    Set Test Variable  \${RECEIVED_STRING}  ${RECEIVED_STRING}_koviten

Server Sends Modified String
    server send packet over udp  ${RECEIVED_STRING}

Client Receives String Over
    ${RECEIVED_STRING}=  client receive packet over udp
    Should Be Equal  ${RECEIVED_STRING}  ${EXPECTED_MODIFIED_STRING}

