*** Settings ***
Test Setup      UDP Server and Client are initialized
Test Teardown   Close Connections
Default Tags    regression
Resource        resources/data_transfer.txt
Resource        resources/server_client.txt
Library         Interface

*** Test Cases ***
Send and Receive string over UDP using physical interface
    Single Client Transfers Data
    Single Server Gets Data

Send data over UDP and modify it and return it back
    Client Sends Data To Server
    Server Sends Modified Data Pack To Client

Send multiple packets over UDP to both ways
    Client Sends Data to Server
    Server Sends Modified Data Pack To Client
    Client Sends data to server
    Server Sends Modified Data Pack To Client

Try To Bind Server To Ip-Address which does not exist
    [Setup]
    Try to bind server to "88.88.88.88"
    Exception "Could not bind socket to ip 88.88.88.88 and port 3011" should raise
    [Teardown]

Connect to servers from two different client IP addresses
    [Tags]  no-ci
    [Setup]
    Create UDP Server  127.0.0.1  57042  server_a
    Create UDP Server  127.0.0.1  57043  server_b
    Create new ip '88.88.88.1' to loopback
    Create new ip '88.88.88.2' to loopback
    Create UDP client 'client_a' to ip '88.88.88.1' and connect to localhost:'57042'
    Create UDP client 'client_b' to ip '88.88.88.2' and connect to localhost:'57043'
    'client_a' sends data
    'server_a' gets data from ip '88.88.88.1'
    'client_b' sends data
    'server_b' gets data from ip '88.88.88.2'
    [Teardown]  Close servers and clients and release interfaces

*** Keywords ***
Create new ip '${ip}' to loopback
    Create interface alias  ${LOOPBACK DEVICE}  ${ip}  255.255.255.0

Close servers and clients and release interfaces
    Delete Client  client_a
    Delete Client  client_b
    Delete Server  server_a
    Del all aliases

Try To Bind Server To "${ip_address}"
    ${error}=  Run Keyword And Expect Error  *  Create UDP Server  ${ip_address}  ${PORT}
    Set Test Variable  ${EXCEPTION}  ${error}
    [Teardown]

Exception "${except}" should raise
    Should Contain  ${EXCEPTION}  ${except}

Client Sends Data To Server
    Single Client Transfers Data
    Single Server Gets Data

Server Sends Modified Data Pack To Client
    Server Modifies Data
    Single Server Sends Modified Data
    Single Client Gets Data

'${client}' sends data
    client sends data  foo  ${client}

Create UDP client '${name}' to ip '${ip}' and connect to localhost:'${server port}'
    Create UDP Client  ${name}  ${ip}
    Client Connects to UDP server  127.0.0.1  ${server port}  ${name}

'${server}' gets data from ip '${client ip}'
    ${data}  ${address}  ${port}  Server receives data and address  ${server}
    Should be equal  ${address}  ${client ip}

